{% extends 'base.html.twig' %}

{% block javascripts %}
    <script src = "{{ asset('js/date-format.js') }}"></script>
{% endblock %}

{% block body %}
    <h1>Private chat</h1>
    <ul id="chat-list">
        {% if messages is defined %}
            {% for message in messages %}
                <li>
                    <p>
                        {{ message.user.username }} : {{ message.message }}
                        <br>
                        {{ message.sendDate|date('H:i:s m/d/Y') }}
                    </p>
                </li>
            {% endfor %}
        {% endif %}
    </ul>
    <hr>
    <textarea id="form-message" placeholder="Your private message here"></textarea>
    <input type="button" id="form-submit" value="Send message"/>

    <script>
        // This object will be sent everytime you submit a message in the sendMessage function.
        var clientInformation = {
            userId: '{{ app.user.id }}',
            username: '{{ app.user.username }}',
            // You can add more information in a static object
        };

        // START SOCKET CONFIG
        /**
         * Note that you need to change the "sandbox" for the URL of your project.
         * According to the configuration in Sockets/Chat.php , change the port if you need to.
         * @type WebSocket
         */
        var conn = new WebSocket('ws://localhost:8080/en/company/' + '{{ company.id }}' + '/chat/' + '{{ room }}');

        conn.onopen = function(e) {
            console.info("Connection established succesfully");
            conn.send(
                JSON.stringify(
                    {
                        connectedUserId : '{{ app.user.id }}',
                        room: '{{ room }}'
                    }
                )
            );
        };

        conn.onmessage = function(e) {
            var data = JSON.parse(e.data);
            Chat.appendMessage(data.username, data.message);

            console.log(data);
        };

        conn.onerror = function(e){
            alert("Error: something went wrong with the socket.");
            console.error(e);
        };
        // END SOCKET CONFIG

        /// Some code to add the messages to the list element and the message submit.
        document.getElementById("form-submit").addEventListener("click",function(){
            var msg = document.getElementById("form-message").value;

            if(!msg){
                alert("Please send something on the chat");
                return;
            }
            Chat.sendMessage(msg);
            // Empty text area
            document.getElementById("form-message").value = "";
        }, false);

        // Mini API to send a message with the socket and append a message in a UL element.
        var Chat = {
            appendMessage: function(username, message){
                if (!username || !message) {
                    return;
                }
                // Append List Item
                var ul = document.getElementById("chat-list");
                var li = document.createElement("li");
                var p   = document.createElement("p");
                var br  = document.createElement("br");
                var dateTime = new Date();
                p.appendChild(document.createTextNode(username + " : " + message));
                p.appendChild(br);
                p.appendChild(document.createTextNode(dateTime.format("HH:mm:ss mm/dd/yyyy")));
                li.appendChild(p);
                ul.appendChild(li);
            },
            sendMessage: function(text){
                clientInformation.message = text;
                // Send info as JSON
                conn.send(JSON.stringify(clientInformation));
                fetch('/api/save-message', {
                    method: 'post',
                    headers: {
                        'Content-type': 'application/json',
                    },
                    body: JSON.stringify({
                        userId: '{{ app.user.id }}',
                        message: clientInformation.message,
                        room: '{{ room }}',
                        company: '{{ company.id }}',
                    }),
                });
                this.appendMessage(clientInformation.username, clientInformation.message);
            }
        };
    </script>
{% endblock %}